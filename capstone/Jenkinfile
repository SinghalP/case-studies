#!/usr/bin/groovy
// by Naga

pipeline {
  // agent any
  agent any
  
  options {
      disableConcurrentBuilds()
  }

  tools {nodejs "node"}

  stages {
    
    stage('Checkout') {
      steps {
        git 'https://github.com/XT-training/case-studies/tree/team-3'
      }
    }
    
     stage('Install dependencies') {
       steps {
         dir('client') {
         sh 'npm install'
         }
       }
     }

    // stage('Test') {
    //   steps {
    //     dir('PM') {
    //      sh 'npm test'
    //     }
    //   }
    //   post {
    //     always {
    //         step([$class: 'CoberturaPublisher', coberturaReportFile: 'output/coverage/jest/cobertura-coverage.xml'])
    //     }
    //   }
    // }

  
    //stage("Build") {
      //  steps { buildApp() }
		//}
    
    // stage("Deploy - Dev") {
    //   steps { deploy('dev') }
		// }
    
    // stage("Test - UAT Dev") {
		// 	steps { runUAT(8888) }
		// }

		// stage("Deploy - Stage") {
		// 	steps { deploy('stage') }
		// }

		// stage("Test - UAT Stage") {
		// 	steps { runUAT(88) }
		// }

    stage("Approve") {
      steps { approve() }
		}

    // stage("Deploy - Live") {
    //   steps { deploy('live') }
		// }

		// stage("Test - UAT Live") {
    //   steps { runUAT(80) }
		// }
    

	}

}

//def buildApp() {
	//dir ('PM' ) {
    // docker.withRegistry('', 'docker-hub-credentials') {
     //   def appImage = docker.build("nagabhushanamn/pm:${BUILD_NUMBER}")
        // appImage.push()
    // }
//	}
//}

//def deploy(environment) {
	//def containerName = ''
	//def port = ''
  //if ("${environment}" == 'dev') {
	//	containerName = "pm-dev"
	//	port = "8888"
	//} 
  //else if ("${environment}" == 'stage') {
	//	containerName = "pm-stage"
	//	port = "88"
	//}
  //else if ("${environment}" == 'live') {
	//	containerName = "pm-live"
	//	port = "80"
	//}
	//else {
	//	println "Environment not valid"
	//	System.exit(0)
	//}

	//sh "docker ps -f name=${containerName} -q | xargs --no-run-if-empty docker stop"
	//sh "docker ps -a -f name=${containerName} -q | xargs -r docker rm"
	//sh "docker run -d -p ${port}:8081 --name ${containerName} nagabhushanamn/pm:${BUILD_NUMBER}"
  
//}

//def runUAT(port) {
  //sh 'chmod +x PM/__tests__/runUAT.sh'
	//sh "PM/__tests__/runUAT.sh ${port}"
//}

//def approve() {
	//timeout(time:1, unit:'DAYS') {
		//input('Do you want to deploy to live?')
	//}
//}